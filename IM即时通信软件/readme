项目描述
本项目是一个个人独立开发的简易即时通信软件，旨在提供一个基于C/S架构的实时通信平台。软件的主要特点和功能包括：
1. 多平台兼容性：软件在Linux系统上开发，保证了良好的系统兼容性和稳定性；
2.实时通信：通过QTcpServer监听客户端连接，使用QTcpSocket实现客户端与服务器之间的实时数据传输；
3.用户界面：采用Qt框架设计直观、易用的图形用户界面，提供良好的用户体验；
4.用户管理：使用QSQLITE数据库进行用户账号的创建、管理和通信记录的存储；
5.多线程支持：软件采用多线程技术，有效处理多个用户的同时通信，提高系统的响应速度和处理能力；
6.安全性：在设计中考虑了通信的安全性，确保用户数据的传输安全和隐私保护；
7.通过本项目的实施，用户可以在不同的设备上通过客户端软件进行实时的文字、图片等信息的交流，满足日常沟通的需求；
8.软件的开发和测试均由个人独立完成，体现了较高的技术能力和项目管理能力；
技术栈包括C++、Qt框架、QTcpServer、QTcpSocket、QSQLITE、多线程技术，通过这些技术的综合应用，软件能够为用户提供一个高效、可靠的实时通信平台。


项目职责
1.系统架构设计：负责设计即时通信软件的C/S架构，确保系统的稳定性和扩展性；
2. 服务器端开发：开发服务器端程序，实现用户账号管理和实时通信的核心功能；
3. 客户端界面设计：使用Qt框架在Linux系统上设计用户友好的客户端界面；
4. 通信协议实现：利用QTcpServer和QTcpSocket实现客户端和服务器之间的通信协议；
5. 数据库管理：创建和维护QSQLITE数据库，用于存储用户信息和通信记录；
6. 多线程编程：实现多线程处理，确保软件在高并发情况下的性能和响应速度；
7. 测试与优化：进行全面的测试，包括单元测试、集成测试和性能测试，不断优化软件性能；
8. 文档编写：编写开发文档和用户手册，确保软件的易用性和可维护性；


项目成果：
1. 成功搭建了基于C/S架构的即时通信软件，实现了不同账号间的实时通信；
2. 利用Qt框架在Linux系统上设计并实现了用户友好的客户端界面；
3. 实现了使用QSQLITE数据库进行用户信息和通信记录的高效管理；
4. 采用多线程技术，提升了软件在高并发情况下的性能和响应速度；
5. 完成了全面的测试流程，包括单元测试、集成测试和性能测试，确保了软件的稳定性和可靠性；

