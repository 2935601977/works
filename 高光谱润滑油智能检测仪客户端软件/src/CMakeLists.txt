CMAKE_MINIMUM_REQUIRED(VERSION 3.17)
set(USING_MINGW64 ON)
# set(USING_MINGW64 OFF)

if(WIN32)
  if(USING_MINGW64)    
    SET(CMAKE_C_COMPILER "D:/msys64/mingw64/bin/gcc.exe")
    SET(CMAKE_CXX_COMPILER "D:/msys64/mingw64/bin/g++.exe")
    MESSAGE("USING_MINGW64...")
  else()
    MESSAGE("USING_MSVC...")
  endif()
elseif(UNIX)
    SET(CMAKE_C_COMPILER "/usr/local/bin/gcc")
    SET(CMAKE_CXX_COMPILER "/usr/local/bin/g++")
endif()

PROJECT(PgSpecDetClient VERSION 1.0.0.0)

MESSAGE("Identifying the OS...")
MESSAGE(STATUS "Cur System: ${CMAKE_SYSTEM_NAME}")

cmake_host_system_information(RESULT PRETTY_NAME QUERY DISTRIB_PRETTY_NAME)
MESSAGE(STATUS "Linux dist: ${PRETTY_NAME}")
IF(${PRETTY_NAME} MATCHES "Ubuntu")
		MESSAGE(STATUS "ubuntu")
    add_definitions(-DUBUNTU)
ENDIF()

if(WIN32)
  MESSAGE("This is Windows.")
elseif(APPLE)
  MESSAGE("This is MacOS.")
elseif(UNIX)
  MESSAGE("This is Linux.")
endif()
MESSAGE("PROJECT_SOURCE_DIR:" ${PROJECT_SOURCE_DIR})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
MESSAGE("CMAKE_CXX_COMPILER:" ${CMAKE_CXX_COMPILER})

SET(CMAKE_BUILD_TYPE "Debug")
# SET(CMAKE_BUILD_TYPE "Release")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g2 -ggdb -DDEBUG")  
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -DNDEBUG")

if("${CMAKE_BUILD_TYPE}" MATCHES "Debug")
  message(STATUS "building for: Debug")
elseif("${CMAKE_BUILD_TYPE}" MATCHES "Release")
  message(STATUS "building for: Release")
endif()
add_definitions(-DPG_CMAKE_BUILD_TYPE=\"${CMAKE_BUILD_TYPE}\")

#add_definitions(-DDEBUG)
add_definitions(-Wwrite-strings)
add_definitions(-DELPP_NO_DEFAULT_LOG_FILE)
add_definitions(-DELPP_THREAD_SAFE)

add_subdirectory(src/PgGUI)
